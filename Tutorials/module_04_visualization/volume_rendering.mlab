// MDL v1 utf8
mevislabVersion = 3.7.2.12
network  {
  watchlist = ""
}
module LocalImage {
  internal  {
    frame = "545 569 144 72"
    moduleGroupName = ""
    showNetworkPanel = true
  }
  fields  {
    instanceName = LocalImage
    name = $(DemoDataPath)/BrainMultiModal/ProbandT1.dcm
    autoLoad = TRUE
  }
}
module SoBackground {
  internal  {
    frame = "582 454 112 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "889 501 141 150"
        sizeHint = "141 150"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = SoBackground
    rotate = TRUE
    flip = FALSE
    on = TRUE
    depthBuffer = TRUE
  }
}
module SoGVRVolumeRenderer {
  internal  {
    frame = "713 454 200 56"
    moduleGroupName = ""
    showNetworkPanel = true
    windows  {
      window _default {
        geometry = "269 247 435 644"
        sizeHint = "435 644"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = SoGVRVolumeRenderer
    renderCaching = AUTO
    boundingBoxCaching = AUTO
    renderCulling = AUTO
    pickCulling = AUTO
    on = TRUE
    autoLoad = TRUE
    interactiveQuality = 0.1
    staticQuality = 1
    interactiveSamplingRate = 1
    staticSamplingRate = 1
    blendMode = Blend
    octreeNodeSize = NODE_SIZE_32
    octreeParentComputationMethod = Rank
    octreeParentComputationRank = 4
    currentTimePoint = 0
    maxTimePoint = 0
    force8bit = FALSE
    filterVolumeData = FilterLinear
    filterLut = TRUE
    subVolumeStartX = 0
    subVolumeStartY = 0
    subVolumeStartZ = 0
    subVolumeEndX = 109
    subVolumeEndY = 91
    subVolumeEndZ = 80
    zbuffer = TRUE
    permitClipping = TRUE
    drawOnPlanes = TRUE
    sizeOutputX = 109
    sizeOutputY = 91
    sizeOutputZ = 80
    incrementalUpdate = TRUE
    highQualityStaticUpdate = FALSE
    staticRenderingAfterInteractionOnly = FALSE
    adaptQualityToWindowSize = TRUE
    rayCastTextureStorage = RayCastTextureStorage_Auto
    renderMode = Illuminated
    greyCenter = 0.5
    greyWidth = 0.5
    greyInvert = FALSE
    alphaCenter = 0.5
    alphaWidth = 0.5
    alphaInvert = FALSE
    colorFactor = "1 1 1"
    alphaFactor = 1
    enhancementAlphaMix = 0.25
    boundaryEnhancement = FALSE
    boundaryEnhancementFactor = 1
    boundaryEnhancementExponent = 1
    boundaryEnhancementGradientBias = 0
    silhouetteEnhancement = FALSE
    silhouetteEnhancementExponent = 1
    silhouetteEnhancementFactor = 1
    toneShading = FALSE
    toneShadingWarmColor = "0.674509823322296 0.533333361148834 0.141176477074623"
    toneShadingColdColor = "0 0 0.400000005960464"
    toneShadingWarmDiffuse = 0.60000002
    toneShadingColdDiffuse = 0.2
    toneShadingAngle = 45
    materialAmbient = 0.60000002
    materialDiffuse = 1
    materialSpecular = 1
    materialSpecularity = 32
    reduceLightingOnLowGradientMagnitude = FALSE
    light1Enabled = TRUE
    light1DiffuseIntensity = 1
    light1SpecularIntensity = 1
    light1Color = "1 1 1"
    light1PolarPhi = 0
    light1PolarRho = 0
    light2Enabled = FALSE
    light2DiffuseIntensity = 1
    light2SpecularIntensity = 1
    light2Color = "1 1 1"
    light2PolarPhi = 45
    light2PolarRho = 45
    light3Enabled = FALSE
    light3DiffuseIntensity = 1
    light3SpecularIntensity = 1
    light3Color = "1 1 1"
    light3PolarPhi = -45
    light3PolarRho = 0
    gradientQuality = GradientQualityAutomatic
    selectionAlphaThreshold = 0.2
    selectionActive = FALSE
    useWorldCoords = TRUE
  }
}
module SoExaminerViewer {
  internal  {
    frame = "541 339 152 56"
    moduleGroupName = ""
    windows  {
      window _viewer {
        geometry = "0 128 400 400"
        sizeHint = "400 400"
        wasOpen = yes
      }
    }
  }
  fields  {
    instanceName = SoExaminerViewer
    renderCaching = AUTO
    boundingBoxCaching = AUTO
    renderCulling = AUTO
    pickCulling = AUTO
    border = FALSE
    background = "0 0 0"
    transparency = BLEND
    antialiasing = FALSE
    antialiasingNumPasses = 1
    useSampleBuffers = FALSE
    numSamples = 8
    grabKeyFocus = TRUE
    enableKeyCommands = TRUE
    snapshotFormat = SNAPSHOT_RGB
    outputAviFile = ""
    autoRedrawWhenRecording = TRUE
    frameRate = 7
    frameRateAvi = 15
    outputSnapshotFile = none
    outputSnapshotFileWritten = none
    autoIncreaseFile = TRUE
    showSnapshotWithShell = FALSE
    snapCount = 0
    inputDevicesList = ""
    headlight = TRUE
    decoration = TRUE
    popupMenuEnabled = FALSE
    viewing = TRUE
    autoClipping = TRUE
    drawStyle = VIEW_AS_IS
    interactiveDrawStyle = VIEW_LOW_COMPLEXITY
    viewAllFlag = FALSE
    initialCameraOrientation = CAMERA_KEEP_AS_IS
    applyCameraOrientation = CAMERA_KEEP_AS_IS
    cameraType = CAMERA_PERSPECTIVE
    autoApplyUserSettingOrientation = FALSE
    userSettingOrientation = "0 0 1 0"
    automaticViewAll = FALSE
    storeCurrentState = TRUE
    saveCamera = TRUE
    cursor = TRUE
    isCameraStored = TRUE
    perspective = TRUE
    stereoViewing = FALSE
    stereoOffset = 3
    height = 0.78539819
    position = "-52.9992065429688 -453.983795166016 103.878791809082"
    orientation = "0.995040237903595 -0.0922187566757202 -0.0372893922030926 1.40052020549774"
    nearDistance = 312.66882
    farDistance = 570.53406
    focalDistance = 438.62769
    forceRedrawOnInteraction = FALSE
    button1events = TO_VIEWER
    button2events = TO_VIEWER
    button3events = TO_VIEWER
    keyEvents = TO_VIEWER
    animationEnabled = FALSE
    feedback = FALSE
    feedbackSize = 32
    mouseInteraction = ""
    rotationAxis = "0 1 0"
    rotationAngle = 360
    rotationSteps = 80
    recordRotation = TRUE
    wheelZoomEnabled = TRUE
    wheelRotationEnabled = TRUE
  }
}
module SoLUTEditor {
  internal  {
    frame = "459 454 104 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "207 308 554 465"
        sizeHint = "554 465"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = SoLUTEditor
    rangeMin = 0
    rangeMax = 4095
    viewMin = 0
    viewMax = 4095
    window = 1
    level = 0.5
    allowNewPoints = TRUE
    updateLutWhileDragging = TRUE
    relativeLut = FALSE
    colorInterpolation = InterpolateRGB
    colorPoints = "[ 0 0.533333361148834 0.466666668653488 0.466666668653488, 102.178504943848 0.533333361148834 0.466666668653488 0.466666668653488, 1021.78503417969 0.470588237047195 0.321568638086319 0.0549019612371922, 2695.9404296875 0.842121541500092 0.809457063674927 0.809457063674927, 4095 1 1 1 ]"
    alphaPoints = "[ 0 0, 102.178504943848 0, 1021.78503417969 0.33128833770752, 2695.9404296875 0.319018393754959, 4095 1 ]"
    alphaFactor = 1
    newRangeMin = 0
    newRangeMax = 4095
    newRangeMode = ClipFormerLUT
    colorEditorHeight = 24
    showColorEditor = TRUE
    showAlphaEditor = TRUE
    markerRadius = 4
    selectedMarkerRadius = 6
    snapMarkerRadius = 10
    alphaLineWidth = 2
    backgroundColor = "0.800000011920929 0.800000011920929 0.800000011920929"
    marginColor = "0.830999970436096 0.815999984741211 0.783999979496002"
    borderColor = "0 0 0"
    alphaLineColor = "0 0 0"
    histogramColor = "0.400000005960464 0.400000005960464 0.400000005960464"
    drawColoredMarkers = TRUE
    markerColor = "1 1 1"
    selectedMarkerColor = "1 0.5 0.5"
    selectedTriangleSize = 8
    triangleSize = 6
    useAntiAliasing = TRUE
  }
}
module SoRotationXYZ {
  internal  {
    frame = "320 454 120 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "1154 472 224 153"
        sizeHint = "121 70"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = SoRotationXYZ
    axis = Y
    angle = 588.76868
  }
}
module SoElapsedTime {
  internal  {
    frame = "317 557 120 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "866 427 248 228"
        sizeHint = "187 157"
        wasOpen = yes
      }
    }
  }
  fields  {
    instanceName = SoElapsedTime
    speed = 1
    on = TRUE
    pause = FALSE
  }
}
connections  {
  SoGVRVolumeRenderer.image = LocalImage.outImage
  SoExaminerViewer.children = "SoRotationXYZ.self SoLUTEditor.outInventorLUT SoBackground.self SoGVRVolumeRenderer.self"
  SoRotationXYZ.angle = SoElapsedTime.timeOut
}
networkModel = ""
